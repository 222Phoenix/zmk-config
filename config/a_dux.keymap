/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

//tap dance tap dance tap dance tap dance ctap dance tap dance tap dance tap dance tap dance tap dance tap dance tap dance tap dance tap dance tap dance 

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(COMMA)>, <&kp LC(LS(TAB))>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(DOT)>, <&kp LC(W)>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp MCLK>, <&kp LC(TAB)>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp RCLK>, <&kp LC(LS(T))>;
        };

    };



    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &td0
            >;
        };
    };
};

//combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos combos 

/ {
    combos {
        compatible = "zmk,combos";

        combo_pgup {
            timeout-ms = <175>;
            key-positions = <0 1>;
            bindings = <&kp PG_UP>;
        };
        combo_pgdn {
            timeout-ms = <175>;
            key-positions = <0 2>;
            bindings = <&kp PG_DN>;
        };
        combo_esc {
            timeout-ms = <175>;
            key-positions = <0 3>;
            bindings = <&kp ESC>;
        };
        combo_reset {
            timeout-ms = <175>;
            key-positions = <0 4>;
            bindings = <&kp &bootloader>;
        };

    };
};

/ {

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own
        base_layer {
            bindings = <
                &td0      &kp LS(COMMA)    &kp E      &kp LS(DOT)   &kp BSPC                                          &kp Y     &kp U     &kp I     &kp O     &kp P
                &kp A        &kp S            &kp D      &kp F         &kp PSCRN                                         &kp H     &kp J     &kp K     &kp L     &kp SEMI
                &kp LEFT     &kp DOWN         &kp UP     &kp RIGHT     &kp B                                             &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH
    &mkp LCLK   &mkp MCLK                                                                                      &kp SPACE &kp ENTER
            >;
        };

    };
};
